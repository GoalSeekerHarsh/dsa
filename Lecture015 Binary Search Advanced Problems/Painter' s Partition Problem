bool isPossible(vector<int> arr, int n, int m, int mid) {
    int painterCount = 1;
    int pageSum = 0;
    
    
    for(int i = 0; i<n; i++) {
        if(pageSum + arr[i] <= mid) {
            pageSum += arr[i];
        }
        else
        {
            painterCount++;
            if(painterCount > m || arr[i] > mid ) {
            return false;
        }
            pageSum = arr[i];
        }
        if(painterCount > m) {
            return false;
        }
        
    }
    return true;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int n=boards.size();
    int m=k;
    if(m>n)
    {
        return -1;
    }
    int s = 0;
    int sum = 0;
    
    for(int i = 0; i<n; i++) {
        sum += boards[i];
    }
    int e = sum;
    int ans = -1;
    int mid = s + (e-s)/2;
    
    while(s<=e)
    {
        if(isPossible(boards,n,m,mid)) {
            
            ans = mid;
            e = mid - 1;
        }
        else
        {
            s = mid + 1;
        }
        mid = s + (e-s)/2;
    }
    return ans;

}
